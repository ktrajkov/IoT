@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="row">
    <div class="col-lg-8">
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Chanel</th>
                    <th>Temperature</th>
                    <th>Datetime</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: temps">
                <tr>
                    <td data-bind="text: $index() + 1"></td>
                    <td data-bind="text: Id"></td>
                    <td data-bind="text: Value"></td>
                    <td data-bind="text: new Date().toLocaleString()"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-lg-8">
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Log</th>
                    <th>Datetime</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: logs">
                <tr>
                    <td data-bind="text: $index() + 1"></td>
                    <td data-bind="text: $data"></td>
                    <td data-bind="text: new Date().toLocaleString()"></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="~/js/data-view-model.js"></script>
    <script data-main="scripts/main" src="~/js/WebSocketManager.js"></script>
    <script>
        var IoT = this.IoT || {};
        debugger;
        var serverUrl = '@Model.WSServerUrl';
        (function () {
            "use strict";
            var dataViewModel = new IoT.dataViewModel();

            var connection = new WebSocketManager.Connection(serverUrl);
            connection.enableLogging = true;

            connection.connectionMethods.onConnected = () => {
                //optional
                console.log("You are now connected! Connection ID: " + connection.connectionId);
            }

            connection.connectionMethods.onDisconnected = () => {
                //optional
                console.log("Disconnected!");
            }

            connection.clientMethods["UpdateTemps"] = (message) => {
                dataViewModel.addTemps(JSON.parse(message.data).Temps);
            };
            connection.clientMethods["Log"] = (message) => {
                dataViewModel.addLog(JSON.parse(message.data));
            };

            connection.start();



            ko.applyBindings(dataViewModel);
        }());
    </script>
}